// import { UserEvents } from './userEvents';
// import { FieldManager } from './fieldManager';
// import { Transform } from './transform';
// import { ResourceConfig } from './resource';

// class Game {
//     private canvasBack!: HTMLCanvasElement;
//     private ctxBack!: CanvasRenderingContext2D;

//     private canvasFront!: HTMLCanvasElement;
//     private ctxFront!: CanvasRenderingContext2D;

//     private latestTransform!: Transform;

//     private fManager!: FieldManager;
//     private start!: number;

//     constructor() {
//         window.onload = async () => {

//             this.start = performance.now();

//             this.init();
//             this.latestTransform = new Transform();

//             this.ctxBack = this.canvasBack.getContext("2d")!;
//             this.ctxFront = this.canvasFront.getContext("2d")!;
//             const response = await fetch('../data/27th.json'); // This will be an API call in the near future
//             const jsonData = await response.json();
//             this.fManager = new FieldManager(this.canvasFront, new ResourceConfig(), jsonData);
//             new UserEvents(this.canvasFront, this.fManager, this.redraw);
//             this.gameLoop();
//         }
//     }

//     private init = () => {
//         let container = document.createElement('div');
//         container.id = "container";

//         this.canvasBack = document.createElement('canvas');
//         this.canvasBack.id = "back";
//         this.canvasBack.width = window.innerWidth;
//         this.canvasBack.height = window.innerHeight;
//         container.appendChild(this.canvasBack);

//         this.canvasFront = document.createElement('canvas');
//         this.canvasFront.id = "front";
//         this.canvasFront.width = window.innerWidth;
//         this.canvasFront.height = window.innerHeight;
//         container.appendChild(this.canvasFront);

//         document.body.appendChild(container);

//         let observer = new ResizeObserver((_) => {
//             this.canvasBack.width = this.canvasBack.clientWidth;
//             this.canvasBack.height = this.canvasBack.clientHeight;
//             this.canvasFront.width = this.canvasBack.clientWidth;
//             this.canvasFront.height = this.canvasBack.clientHeight;
//             this.gameLoop();
//         });
//         observer.observe(this.canvasBack);
//     }

//     private redraw = (transform: Transform) => {
//         this.latestTransform = transform;
//         this.gameLoop();
//     }

//     private gameLoop = () => {
//         requestAnimationFrame(this.gameLoop);

//         const diff = performance.now() - this.start;
//         if (diff > 16 && this.fManager instanceof FieldManager) {
//             this.ctxBack.fillStyle = "black";
//             this.ctxBack.fillRect(0, 0, this.canvasBack.width, this.canvasBack.height);
//             this.ctxFront.clearRect(0, 0, this.canvasBack.width, this.canvasBack.height);
//             this.fManager.draw(this.ctxBack, this.ctxFront, this.latestTransform);
//             this.start = performance.now();
//         }
//     }
// }

// new Game();